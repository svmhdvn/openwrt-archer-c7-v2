From a644e557ffa81e3927f4be580ca4e7233c1425de Mon Sep 17 00:00:00 2001
From: Siva Mahadevan <me@svmhdvn.name>
Date: Sat, 26 Mar 2022 13:59:08 -0400
Subject: [PATCH] ag71xx: strip even more debug

---
 .../net/ethernet/atheros/ag71xx/ag71xx_main.c | 43 +------------------
 1 file changed, 2 insertions(+), 41 deletions(-)

diff --git a/target/linux/ath79/files/drivers/net/ethernet/atheros/ag71xx/ag71xx_main.c b/target/linux/ath79/files/drivers/net/ethernet/atheros/ag71xx/ag71xx_main.c
index 84b0f9e4ac..b559b502cf 100644
--- a/target/linux/ath79/files/drivers/net/ethernet/atheros/ag71xx/ag71xx_main.c
+++ b/target/linux/ath79/files/drivers/net/ethernet/atheros/ag71xx/ag71xx_main.c
@@ -56,32 +56,6 @@ static void ag71xx_dump_dma_regs(struct ag71xx *ag)
 		ag71xx_rr(ag, AG71XX_REG_RX_STATUS));
 }
 
-static void ag71xx_dump_regs(struct ag71xx *ag)
-{
-	DBG("%s: mac_cfg1=%08x, mac_cfg2=%08x, ipg=%08x, hdx=%08x, mfl=%08x\n",
-		ag->dev->name,
-		ag71xx_rr(ag, AG71XX_REG_MAC_CFG1),
-		ag71xx_rr(ag, AG71XX_REG_MAC_CFG2),
-		ag71xx_rr(ag, AG71XX_REG_MAC_IPG),
-		ag71xx_rr(ag, AG71XX_REG_MAC_HDX),
-		ag71xx_rr(ag, AG71XX_REG_MAC_MFL));
-	DBG("%s: mac_ifctl=%08x, mac_addr1=%08x, mac_addr2=%08x\n",
-		ag->dev->name,
-		ag71xx_rr(ag, AG71XX_REG_MAC_IFCTL),
-		ag71xx_rr(ag, AG71XX_REG_MAC_ADDR1),
-		ag71xx_rr(ag, AG71XX_REG_MAC_ADDR2));
-	DBG("%s: fifo_cfg0=%08x, fifo_cfg1=%08x, fifo_cfg2=%08x\n",
-		ag->dev->name,
-		ag71xx_rr(ag, AG71XX_REG_FIFO_CFG0),
-		ag71xx_rr(ag, AG71XX_REG_FIFO_CFG1),
-		ag71xx_rr(ag, AG71XX_REG_FIFO_CFG2));
-	DBG("%s: fifo_cfg3=%08x, fifo_cfg4=%08x, fifo_cfg5=%08x\n",
-		ag->dev->name,
-		ag71xx_rr(ag, AG71XX_REG_FIFO_CFG3),
-		ag71xx_rr(ag, AG71XX_REG_FIFO_CFG4),
-		ag71xx_rr(ag, AG71XX_REG_FIFO_CFG5));
-}
-
 static inline void ag71xx_dump_intr(struct ag71xx *ag, char *label, u32 intr)
 {
 	DBG("%s: %s intr=%08x %s%s%s%s%s%s\n",
@@ -199,17 +173,13 @@ static int ag71xx_ring_rx_init(struct ag71xx *ag)
 	int ring_size = BIT(ring->order);
 	int ring_mask = BIT(ring->order) - 1;
 	unsigned int i;
-	int ret;
+	int ret = 0;
 
-	ret = 0;
 	for (i = 0; i < ring_size; i++) {
 		struct ag71xx_desc *desc = ag71xx_ring_desc(ring, i);
 
 		desc->next = (u32) (ring->descs_dma +
 			AG71XX_DESC_SIZE * ((i + 1) & ring_mask));
-
-		DBG("ag71xx: RX desc at %p, next is %08x\n",
-			desc, desc->next);
 	}
 
 	for (i = 0; i < ring_size; i++) {
@@ -237,10 +207,9 @@ static int ag71xx_ring_rx_refill(struct ag71xx *ag)
 {
 	struct ag71xx_ring *ring = &ag->rx_ring;
 	int ring_mask = BIT(ring->order) - 1;
-	unsigned int count;
+	unsigned int count = 0;
 	int offset = ag->rx_buf_offset;
 
-	count = 0;
 	for (; ring->curr - ring->dirty > 0; ring->dirty++) {
 		struct ag71xx_desc *desc;
 		unsigned int i;
@@ -260,8 +229,6 @@ static int ag71xx_ring_rx_refill(struct ag71xx *ag)
 	/* flush descriptors */
 	wmb();
 
-	DBG("%s: %u rx descriptors refilled\n", ag->dev->name, count);
-
 	return count;
 }
 
@@ -957,8 +924,6 @@ __ag71xx_link_adjust(struct ag71xx *ag, bool update)
 			ag->dev->name,
 			ag71xx_speed_str(ag),
 			(DUPLEX_FULL == ag->duplex) ? "Full" : "Half");
-
-	ag71xx_dump_regs(ag);
 }
 
 void ag71xx_link_adjust(struct ag71xx *ag)
@@ -1698,14 +1663,10 @@ static int ag71xx_probe(struct platform_device *pdev)
 
 	netif_napi_add(dev, &ag->napi, ag71xx_poll, AG71XX_NAPI_WEIGHT);
 
-	ag71xx_dump_regs(ag);
-
 	ag71xx_wr(ag, AG71XX_REG_MAC_CFG1, 0);
 
 	ag71xx_hw_init(ag);
 
-	ag71xx_dump_regs(ag);
-
 	/*
 	 * populate current node to register mdio-bus as a subdevice.
 	 * the mdio bus works independently on ar7241 and later chips
-- 
2.25.1

